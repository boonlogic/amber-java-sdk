/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetStatusResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-01-10T15:34:16.605003-06:00[America/Chicago]")
public class GetStatusResponse {
  public static final String SERIALIZED_NAME_PCA = "pca";
  @SerializedName(SERIALIZED_NAME_PCA)
  private List<List<Float>> pca = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLUSTER_GROWTH = "clusterGrowth";
  @SerializedName(SERIALIZED_NAME_CLUSTER_GROWTH)
  private List<Integer> clusterGrowth = new ArrayList<>();

  public static final String SERIALIZED_NAME_CLUSTER_SIZES = "clusterSizes";
  @SerializedName(SERIALIZED_NAME_CLUSTER_SIZES)
  private List<Integer> clusterSizes = new ArrayList<>();

  public static final String SERIALIZED_NAME_ANOMALY_INDEXES = "anomalyIndexes";
  @SerializedName(SERIALIZED_NAME_ANOMALY_INDEXES)
  private List<Integer> anomalyIndexes = new ArrayList<>();

  public static final String SERIALIZED_NAME_FREQUENCY_INDEXES = "frequencyIndexes";
  @SerializedName(SERIALIZED_NAME_FREQUENCY_INDEXES)
  private List<Integer> frequencyIndexes = new ArrayList<>();

  public static final String SERIALIZED_NAME_DISTANCE_INDEXES = "distanceIndexes";
  @SerializedName(SERIALIZED_NAME_DISTANCE_INDEXES)
  private List<Integer> distanceIndexes = new ArrayList<>();

  public static final String SERIALIZED_NAME_TOTAL_INFERENCES = "totalInferences";
  @SerializedName(SERIALIZED_NAME_TOTAL_INFERENCES)
  private Integer totalInferences;

  public static final String SERIALIZED_NAME_NUM_CLUSTERS = "numClusters";
  @SerializedName(SERIALIZED_NAME_NUM_CLUSTERS)
  private Integer numClusters;

  public static final String SERIALIZED_NAME_ANOMALY_THRESHOLD = "anomalyThreshold";
  @SerializedName(SERIALIZED_NAME_ANOMALY_THRESHOLD)
  private Integer anomalyThreshold;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public GetStatusResponse() {
  }

  public GetStatusResponse pca(List<List<Float>> pca) {
    
    this.pca = pca;
    return this;
  }

  public GetStatusResponse addPcaItem(List<Float> pcaItem) {
    this.pca.add(pcaItem);
    return this;
  }

   /**
   * array of pca values
   * @return pca
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "array of pca values")

  public List<List<Float>> getPca() {
    return pca;
  }


  public void setPca(List<List<Float>> pca) {
    this.pca = pca;
  }


  public GetStatusResponse clusterGrowth(List<Integer> clusterGrowth) {
    
    this.clusterGrowth = clusterGrowth;
    return this;
  }

  public GetStatusResponse addClusterGrowthItem(Integer clusterGrowthItem) {
    this.clusterGrowth.add(clusterGrowthItem);
    return this;
  }

   /**
   * Get clusterGrowth
   * @return clusterGrowth
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Integer> getClusterGrowth() {
    return clusterGrowth;
  }


  public void setClusterGrowth(List<Integer> clusterGrowth) {
    this.clusterGrowth = clusterGrowth;
  }


  public GetStatusResponse clusterSizes(List<Integer> clusterSizes) {
    
    this.clusterSizes = clusterSizes;
    return this;
  }

  public GetStatusResponse addClusterSizesItem(Integer clusterSizesItem) {
    this.clusterSizes.add(clusterSizesItem);
    return this;
  }

   /**
   * Get clusterSizes
   * @return clusterSizes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Integer> getClusterSizes() {
    return clusterSizes;
  }


  public void setClusterSizes(List<Integer> clusterSizes) {
    this.clusterSizes = clusterSizes;
  }


  public GetStatusResponse anomalyIndexes(List<Integer> anomalyIndexes) {
    
    this.anomalyIndexes = anomalyIndexes;
    return this;
  }

  public GetStatusResponse addAnomalyIndexesItem(Integer anomalyIndexesItem) {
    this.anomalyIndexes.add(anomalyIndexesItem);
    return this;
  }

   /**
   * Get anomalyIndexes
   * @return anomalyIndexes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Integer> getAnomalyIndexes() {
    return anomalyIndexes;
  }


  public void setAnomalyIndexes(List<Integer> anomalyIndexes) {
    this.anomalyIndexes = anomalyIndexes;
  }


  public GetStatusResponse frequencyIndexes(List<Integer> frequencyIndexes) {
    
    this.frequencyIndexes = frequencyIndexes;
    return this;
  }

  public GetStatusResponse addFrequencyIndexesItem(Integer frequencyIndexesItem) {
    this.frequencyIndexes.add(frequencyIndexesItem);
    return this;
  }

   /**
   * Get frequencyIndexes
   * @return frequencyIndexes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Integer> getFrequencyIndexes() {
    return frequencyIndexes;
  }


  public void setFrequencyIndexes(List<Integer> frequencyIndexes) {
    this.frequencyIndexes = frequencyIndexes;
  }


  public GetStatusResponse distanceIndexes(List<Integer> distanceIndexes) {
    
    this.distanceIndexes = distanceIndexes;
    return this;
  }

  public GetStatusResponse addDistanceIndexesItem(Integer distanceIndexesItem) {
    this.distanceIndexes.add(distanceIndexesItem);
    return this;
  }

   /**
   * Get distanceIndexes
   * @return distanceIndexes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<Integer> getDistanceIndexes() {
    return distanceIndexes;
  }


  public void setDistanceIndexes(List<Integer> distanceIndexes) {
    this.distanceIndexes = distanceIndexes;
  }


  public GetStatusResponse totalInferences(Integer totalInferences) {
    
    this.totalInferences = totalInferences;
    return this;
  }

   /**
   * inferences since the most recent restart
   * @return totalInferences
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "inferences since the most recent restart")

  public Integer getTotalInferences() {
    return totalInferences;
  }


  public void setTotalInferences(Integer totalInferences) {
    this.totalInferences = totalInferences;
  }


  public GetStatusResponse numClusters(Integer numClusters) {
    
    this.numClusters = numClusters;
    return this;
  }

   /**
   * Get numClusters
   * @return numClusters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getNumClusters() {
    return numClusters;
  }


  public void setNumClusters(Integer numClusters) {
    this.numClusters = numClusters;
  }


  public GetStatusResponse anomalyThreshold(Integer anomalyThreshold) {
    
    this.anomalyThreshold = anomalyThreshold;
    return this;
  }

   /**
   * Get anomalyThreshold
   * @return anomalyThreshold
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Integer getAnomalyThreshold() {
    return anomalyThreshold;
  }


  public void setAnomalyThreshold(Integer anomalyThreshold) {
    this.anomalyThreshold = anomalyThreshold;
  }


  public GetStatusResponse state(String state) {
    
    this.state = state;
    return this;
  }

   /**
   * state of the sensor. Possible state variables are: Error, Buffering, Autotuning, Learning, Monitoring
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "state of the sensor. Possible state variables are: Error, Buffering, Autotuning, Learning, Monitoring")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    this.state = state;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetStatusResponse getStatusResponse = (GetStatusResponse) o;
    return Objects.equals(this.pca, getStatusResponse.pca) &&
        Objects.equals(this.clusterGrowth, getStatusResponse.clusterGrowth) &&
        Objects.equals(this.clusterSizes, getStatusResponse.clusterSizes) &&
        Objects.equals(this.anomalyIndexes, getStatusResponse.anomalyIndexes) &&
        Objects.equals(this.frequencyIndexes, getStatusResponse.frequencyIndexes) &&
        Objects.equals(this.distanceIndexes, getStatusResponse.distanceIndexes) &&
        Objects.equals(this.totalInferences, getStatusResponse.totalInferences) &&
        Objects.equals(this.numClusters, getStatusResponse.numClusters) &&
        Objects.equals(this.anomalyThreshold, getStatusResponse.anomalyThreshold) &&
        Objects.equals(this.state, getStatusResponse.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pca, clusterGrowth, clusterSizes, anomalyIndexes, frequencyIndexes, distanceIndexes, totalInferences, numClusters, anomalyThreshold, state);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetStatusResponse {\n");
    sb.append("    pca: ").append(toIndentedString(pca)).append("\n");
    sb.append("    clusterGrowth: ").append(toIndentedString(clusterGrowth)).append("\n");
    sb.append("    clusterSizes: ").append(toIndentedString(clusterSizes)).append("\n");
    sb.append("    anomalyIndexes: ").append(toIndentedString(anomalyIndexes)).append("\n");
    sb.append("    frequencyIndexes: ").append(toIndentedString(frequencyIndexes)).append("\n");
    sb.append("    distanceIndexes: ").append(toIndentedString(distanceIndexes)).append("\n");
    sb.append("    totalInferences: ").append(toIndentedString(totalInferences)).append("\n");
    sb.append("    numClusters: ").append(toIndentedString(numClusters)).append("\n");
    sb.append("    anomalyThreshold: ").append(toIndentedString(anomalyThreshold)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("pca");
    openapiFields.add("clusterGrowth");
    openapiFields.add("clusterSizes");
    openapiFields.add("anomalyIndexes");
    openapiFields.add("frequencyIndexes");
    openapiFields.add("distanceIndexes");
    openapiFields.add("totalInferences");
    openapiFields.add("numClusters");
    openapiFields.add("anomalyThreshold");
    openapiFields.add("state");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("pca");
    openapiRequiredFields.add("clusterGrowth");
    openapiRequiredFields.add("clusterSizes");
    openapiRequiredFields.add("anomalyIndexes");
    openapiRequiredFields.add("frequencyIndexes");
    openapiRequiredFields.add("distanceIndexes");
    openapiRequiredFields.add("totalInferences");
    openapiRequiredFields.add("numClusters");
    openapiRequiredFields.add("anomalyThreshold");
    openapiRequiredFields.add("state");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GetStatusResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GetStatusResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetStatusResponse is not found in the empty JSON string", GetStatusResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!GetStatusResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetStatusResponse` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GetStatusResponse.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("pca") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("pca").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `pca` to be an array in the JSON string but got `%s`", jsonObj.get("pca").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("clusterGrowth") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("clusterGrowth").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterGrowth` to be an array in the JSON string but got `%s`", jsonObj.get("clusterGrowth").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("clusterSizes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("clusterSizes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clusterSizes` to be an array in the JSON string but got `%s`", jsonObj.get("clusterSizes").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("anomalyIndexes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("anomalyIndexes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `anomalyIndexes` to be an array in the JSON string but got `%s`", jsonObj.get("anomalyIndexes").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("frequencyIndexes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("frequencyIndexes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `frequencyIndexes` to be an array in the JSON string but got `%s`", jsonObj.get("frequencyIndexes").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("distanceIndexes") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("distanceIndexes").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `distanceIndexes` to be an array in the JSON string but got `%s`", jsonObj.get("distanceIndexes").toString()));
      }
      if (!jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetStatusResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetStatusResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetStatusResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetStatusResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetStatusResponse>() {
           @Override
           public void write(JsonWriter out, GetStatusResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetStatusResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetStatusResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetStatusResponse
  * @throws IOException if the JSON string is invalid with respect to GetStatusResponse
  */
  public static GetStatusResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetStatusResponse.class);
  }

 /**
  * Convert an instance of GetStatusResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

