/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SensorUsageInfo;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * GetSensorResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class GetSensorResponse {
  @SerializedName("label")
  private String label = null;

  @SerializedName("sensorId")
  private String sensorId = null;

  @SerializedName("usageInfo")
  private SensorUsageInfo usageInfo = null;

  public GetSensorResponse label(String label) {
    this.label = label;
    return this;
  }

   /**
   * Additional label to be assigned for sensor
   * @return label
  **/
  @Schema(required = true, description = "Additional label to be assigned for sensor")
  public String getLabel() {
    return label;
  }

  public void setLabel(String label) {
    this.label = label;
  }

  public GetSensorResponse sensorId(String sensorId) {
    this.sensorId = sensorId;
    return this;
  }

   /**
   * Unique identifier for sensor
   * @return sensorId
  **/
  @Schema(required = true, description = "Unique identifier for sensor")
  public String getSensorId() {
    return sensorId;
  }

  public void setSensorId(String sensorId) {
    this.sensorId = sensorId;
  }

  public GetSensorResponse usageInfo(SensorUsageInfo usageInfo) {
    this.usageInfo = usageInfo;
    return this;
  }

   /**
   * Get usageInfo
   * @return usageInfo
  **/
  @Schema(required = true, description = "")
  public SensorUsageInfo getUsageInfo() {
    return usageInfo;
  }

  public void setUsageInfo(SensorUsageInfo usageInfo) {
    this.usageInfo = usageInfo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSensorResponse getSensorResponse = (GetSensorResponse) o;
    return Objects.equals(this.label, getSensorResponse.label) &&
        Objects.equals(this.sensorId, getSensorResponse.sensorId) &&
        Objects.equals(this.usageInfo, getSensorResponse.usageInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(label, sensorId, usageInfo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSensorResponse {\n");
    
    sb.append("    label: ").append(toIndentedString(label)).append("\n");
    sb.append("    sensorId: ").append(toIndentedString(sensorId)).append("\n");
    sb.append("    usageInfo: ").append(toIndentedString(usageInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
