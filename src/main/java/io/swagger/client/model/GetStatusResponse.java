/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PCA;
import io.swagger.client.model.Uint16Array;
import io.swagger.client.model.Uint64Array;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
/**
 * GetStatusResponse
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class GetStatusResponse {
  @SerializedName("pca")
  private PCA pca = null;

  @SerializedName("clusterGrowth")
  private Uint64Array clusterGrowth = null;

  @SerializedName("clusterSizes")
  private Uint64Array clusterSizes = null;

  @SerializedName("anomalyIndexes")
  private Uint16Array anomalyIndexes = null;

  @SerializedName("frequencyIndexes")
  private Uint16Array frequencyIndexes = null;

  @SerializedName("distanceIndexes")
  private Uint16Array distanceIndexes = null;

  @SerializedName("totalInferences")
  private BigDecimal totalInferences = null;

  @SerializedName("numClusters")
  private BigDecimal numClusters = null;

  @SerializedName("anomalyThreshold")
  private Integer anomalyThreshold = null;

  @SerializedName("state")
  private String state = null;

  public GetStatusResponse pca(PCA pca) {
    this.pca = pca;
    return this;
  }

   /**
   * Get pca
   * @return pca
  **/
  @Schema(required = true, description = "")
  public PCA getPca() {
    return pca;
  }

  public void setPca(PCA pca) {
    this.pca = pca;
  }

  public GetStatusResponse clusterGrowth(Uint64Array clusterGrowth) {
    this.clusterGrowth = clusterGrowth;
    return this;
  }

   /**
   * Get clusterGrowth
   * @return clusterGrowth
  **/
  @Schema(required = true, description = "")
  public Uint64Array getClusterGrowth() {
    return clusterGrowth;
  }

  public void setClusterGrowth(Uint64Array clusterGrowth) {
    this.clusterGrowth = clusterGrowth;
  }

  public GetStatusResponse clusterSizes(Uint64Array clusterSizes) {
    this.clusterSizes = clusterSizes;
    return this;
  }

   /**
   * Get clusterSizes
   * @return clusterSizes
  **/
  @Schema(required = true, description = "")
  public Uint64Array getClusterSizes() {
    return clusterSizes;
  }

  public void setClusterSizes(Uint64Array clusterSizes) {
    this.clusterSizes = clusterSizes;
  }

  public GetStatusResponse anomalyIndexes(Uint16Array anomalyIndexes) {
    this.anomalyIndexes = anomalyIndexes;
    return this;
  }

   /**
   * Get anomalyIndexes
   * @return anomalyIndexes
  **/
  @Schema(required = true, description = "")
  public Uint16Array getAnomalyIndexes() {
    return anomalyIndexes;
  }

  public void setAnomalyIndexes(Uint16Array anomalyIndexes) {
    this.anomalyIndexes = anomalyIndexes;
  }

  public GetStatusResponse frequencyIndexes(Uint16Array frequencyIndexes) {
    this.frequencyIndexes = frequencyIndexes;
    return this;
  }

   /**
   * Get frequencyIndexes
   * @return frequencyIndexes
  **/
  @Schema(required = true, description = "")
  public Uint16Array getFrequencyIndexes() {
    return frequencyIndexes;
  }

  public void setFrequencyIndexes(Uint16Array frequencyIndexes) {
    this.frequencyIndexes = frequencyIndexes;
  }

  public GetStatusResponse distanceIndexes(Uint16Array distanceIndexes) {
    this.distanceIndexes = distanceIndexes;
    return this;
  }

   /**
   * Get distanceIndexes
   * @return distanceIndexes
  **/
  @Schema(required = true, description = "")
  public Uint16Array getDistanceIndexes() {
    return distanceIndexes;
  }

  public void setDistanceIndexes(Uint16Array distanceIndexes) {
    this.distanceIndexes = distanceIndexes;
  }

  public GetStatusResponse totalInferences(BigDecimal totalInferences) {
    this.totalInferences = totalInferences;
    return this;
  }

   /**
   * inferences since the most recent restart
   * @return totalInferences
  **/
  @Schema(required = true, description = "inferences since the most recent restart")
  public BigDecimal getTotalInferences() {
    return totalInferences;
  }

  public void setTotalInferences(BigDecimal totalInferences) {
    this.totalInferences = totalInferences;
  }

  public GetStatusResponse numClusters(BigDecimal numClusters) {
    this.numClusters = numClusters;
    return this;
  }

   /**
   * Get numClusters
   * @return numClusters
  **/
  @Schema(required = true, description = "")
  public BigDecimal getNumClusters() {
    return numClusters;
  }

  public void setNumClusters(BigDecimal numClusters) {
    this.numClusters = numClusters;
  }

  public GetStatusResponse anomalyThreshold(Integer anomalyThreshold) {
    this.anomalyThreshold = anomalyThreshold;
    return this;
  }

   /**
   * Get anomalyThreshold
   * @return anomalyThreshold
  **/
  @Schema(required = true, description = "")
  public Integer getAnomalyThreshold() {
    return anomalyThreshold;
  }

  public void setAnomalyThreshold(Integer anomalyThreshold) {
    this.anomalyThreshold = anomalyThreshold;
  }

  public GetStatusResponse state(String state) {
    this.state = state;
    return this;
  }

   /**
   * state of the sensor. Possible state variables are: Error, Buffering, Autotuning, Learning, Monitoring
   * @return state
  **/
  @Schema(required = true, description = "state of the sensor. Possible state variables are: Error, Buffering, Autotuning, Learning, Monitoring")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetStatusResponse getStatusResponse = (GetStatusResponse) o;
    return Objects.equals(this.pca, getStatusResponse.pca) &&
        Objects.equals(this.clusterGrowth, getStatusResponse.clusterGrowth) &&
        Objects.equals(this.clusterSizes, getStatusResponse.clusterSizes) &&
        Objects.equals(this.anomalyIndexes, getStatusResponse.anomalyIndexes) &&
        Objects.equals(this.frequencyIndexes, getStatusResponse.frequencyIndexes) &&
        Objects.equals(this.distanceIndexes, getStatusResponse.distanceIndexes) &&
        Objects.equals(this.totalInferences, getStatusResponse.totalInferences) &&
        Objects.equals(this.numClusters, getStatusResponse.numClusters) &&
        Objects.equals(this.anomalyThreshold, getStatusResponse.anomalyThreshold) &&
        Objects.equals(this.state, getStatusResponse.state);
  }

  @Override
  public int hashCode() {
    return Objects.hash(pca, clusterGrowth, clusterSizes, anomalyIndexes, frequencyIndexes, distanceIndexes, totalInferences, numClusters, anomalyThreshold, state);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetStatusResponse {\n");
    
    sb.append("    pca: ").append(toIndentedString(pca)).append("\n");
    sb.append("    clusterGrowth: ").append(toIndentedString(clusterGrowth)).append("\n");
    sb.append("    clusterSizes: ").append(toIndentedString(clusterSizes)).append("\n");
    sb.append("    anomalyIndexes: ").append(toIndentedString(anomalyIndexes)).append("\n");
    sb.append("    frequencyIndexes: ").append(toIndentedString(frequencyIndexes)).append("\n");
    sb.append("    distanceIndexes: ").append(toIndentedString(distanceIndexes)).append("\n");
    sb.append("    totalInferences: ").append(toIndentedString(totalInferences)).append("\n");
    sb.append("    numClusters: ").append(toIndentedString(numClusters)).append("\n");
    sb.append("    anomalyThreshold: ").append(toIndentedString(anomalyThreshold)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
