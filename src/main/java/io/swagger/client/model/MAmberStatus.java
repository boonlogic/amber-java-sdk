/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * MAmberStatus
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class MAmberStatus {
  @SerializedName("VersionNumber")
  private Integer versionNumber = null;

  @SerializedName("m_Status")
  private String mStatus = null;

  @SerializedName("m_Message")
  private String mMessage = null;

  @SerializedName("m_Progress")
  private Integer mProgress = null;

  @SerializedName("m_CurrentClusterCount")
  private Integer mCurrentClusterCount = null;

  @SerializedName("m_RetryCount")
  private Integer mRetryCount = null;

  @SerializedName("m_StreamingWindowSize")
  private Integer mStreamingWindowSize = null;

  @SerializedName("m_TotalInferences")
  private Integer mTotalInferences = null;

  @SerializedName("m_TotalSamplesWritten")
  private Integer mTotalSamplesWritten = null;

  public MAmberStatus versionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @Schema(description = "")
  public Integer getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }

  public MAmberStatus mStatus(String mStatus) {
    this.mStatus = mStatus;
    return this;
  }

   /**
   * Get mStatus
   * @return mStatus
  **/
  @Schema(required = true, description = "")
  public String getMStatus() {
    return mStatus;
  }

  public void setMStatus(String mStatus) {
    this.mStatus = mStatus;
  }

  public MAmberStatus mMessage(String mMessage) {
    this.mMessage = mMessage;
    return this;
  }

   /**
   * Get mMessage
   * @return mMessage
  **/
  @Schema(description = "")
  public String getMMessage() {
    return mMessage;
  }

  public void setMMessage(String mMessage) {
    this.mMessage = mMessage;
  }

  public MAmberStatus mProgress(Integer mProgress) {
    this.mProgress = mProgress;
    return this;
  }

   /**
   * Get mProgress
   * @return mProgress
  **/
  @Schema(description = "")
  public Integer getMProgress() {
    return mProgress;
  }

  public void setMProgress(Integer mProgress) {
    this.mProgress = mProgress;
  }

  public MAmberStatus mCurrentClusterCount(Integer mCurrentClusterCount) {
    this.mCurrentClusterCount = mCurrentClusterCount;
    return this;
  }

   /**
   * Get mCurrentClusterCount
   * @return mCurrentClusterCount
  **/
  @Schema(required = true, description = "")
  public Integer getMCurrentClusterCount() {
    return mCurrentClusterCount;
  }

  public void setMCurrentClusterCount(Integer mCurrentClusterCount) {
    this.mCurrentClusterCount = mCurrentClusterCount;
  }

  public MAmberStatus mRetryCount(Integer mRetryCount) {
    this.mRetryCount = mRetryCount;
    return this;
  }

   /**
   * Get mRetryCount
   * @return mRetryCount
  **/
  @Schema(required = true, description = "")
  public Integer getMRetryCount() {
    return mRetryCount;
  }

  public void setMRetryCount(Integer mRetryCount) {
    this.mRetryCount = mRetryCount;
  }

  public MAmberStatus mStreamingWindowSize(Integer mStreamingWindowSize) {
    this.mStreamingWindowSize = mStreamingWindowSize;
    return this;
  }

   /**
   * Get mStreamingWindowSize
   * @return mStreamingWindowSize
  **/
  @Schema(required = true, description = "")
  public Integer getMStreamingWindowSize() {
    return mStreamingWindowSize;
  }

  public void setMStreamingWindowSize(Integer mStreamingWindowSize) {
    this.mStreamingWindowSize = mStreamingWindowSize;
  }

  public MAmberStatus mTotalInferences(Integer mTotalInferences) {
    this.mTotalInferences = mTotalInferences;
    return this;
  }

   /**
   * Get mTotalInferences
   * @return mTotalInferences
  **/
  @Schema(required = true, description = "")
  public Integer getMTotalInferences() {
    return mTotalInferences;
  }

  public void setMTotalInferences(Integer mTotalInferences) {
    this.mTotalInferences = mTotalInferences;
  }

  public MAmberStatus mTotalSamplesWritten(Integer mTotalSamplesWritten) {
    this.mTotalSamplesWritten = mTotalSamplesWritten;
    return this;
  }

   /**
   * Get mTotalSamplesWritten
   * @return mTotalSamplesWritten
  **/
  @Schema(description = "")
  public Integer getMTotalSamplesWritten() {
    return mTotalSamplesWritten;
  }

  public void setMTotalSamplesWritten(Integer mTotalSamplesWritten) {
    this.mTotalSamplesWritten = mTotalSamplesWritten;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MAmberStatus mAmberStatus = (MAmberStatus) o;
    return Objects.equals(this.versionNumber, mAmberStatus.versionNumber) &&
        Objects.equals(this.mStatus, mAmberStatus.mStatus) &&
        Objects.equals(this.mMessage, mAmberStatus.mMessage) &&
        Objects.equals(this.mProgress, mAmberStatus.mProgress) &&
        Objects.equals(this.mCurrentClusterCount, mAmberStatus.mCurrentClusterCount) &&
        Objects.equals(this.mRetryCount, mAmberStatus.mRetryCount) &&
        Objects.equals(this.mStreamingWindowSize, mAmberStatus.mStreamingWindowSize) &&
        Objects.equals(this.mTotalInferences, mAmberStatus.mTotalInferences) &&
        Objects.equals(this.mTotalSamplesWritten, mAmberStatus.mTotalSamplesWritten);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionNumber, mStatus, mMessage, mProgress, mCurrentClusterCount, mRetryCount, mStreamingWindowSize, mTotalInferences, mTotalSamplesWritten);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MAmberStatus {\n");
    
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    mStatus: ").append(toIndentedString(mStatus)).append("\n");
    sb.append("    mMessage: ").append(toIndentedString(mMessage)).append("\n");
    sb.append("    mProgress: ").append(toIndentedString(mProgress)).append("\n");
    sb.append("    mCurrentClusterCount: ").append(toIndentedString(mCurrentClusterCount)).append("\n");
    sb.append("    mRetryCount: ").append(toIndentedString(mRetryCount)).append("\n");
    sb.append("    mStreamingWindowSize: ").append(toIndentedString(mStreamingWindowSize)).append("\n");
    sb.append("    mTotalInferences: ").append(toIndentedString(mTotalInferences)).append("\n");
    sb.append("    mTotalSamplesWritten: ").append(toIndentedString(mTotalSamplesWritten)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
