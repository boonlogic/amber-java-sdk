/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * PostAuth2Response
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class PostAuth2Response {
  @SerializedName("idToken")
  private String idToken = null;

  @SerializedName("refreshToken")
  private String refreshToken = null;

  @SerializedName("expiresIn")
  private String expiresIn = null;

  @SerializedName("tokenType")
  private String tokenType = null;

  public PostAuth2Response idToken(String idToken) {
    this.idToken = idToken;
    return this;
  }

   /**
   * Identifier token to be used as Bearer token
   * @return idToken
  **/
  @Schema(required = true, description = "Identifier token to be used as Bearer token")
  public String getIdToken() {
    return idToken;
  }

  public void setIdToken(String idToken) {
    this.idToken = idToken;
  }

  public PostAuth2Response refreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
    return this;
  }

   /**
   * Refresh token identifier
   * @return refreshToken
  **/
  @Schema(required = true, description = "Refresh token identifier")
  public String getRefreshToken() {
    return refreshToken;
  }

  public void setRefreshToken(String refreshToken) {
    this.refreshToken = refreshToken;
  }

  public PostAuth2Response expiresIn(String expiresIn) {
    this.expiresIn = expiresIn;
    return this;
  }

   /**
   * Amount of time before token expires
   * @return expiresIn
  **/
  @Schema(required = true, description = "Amount of time before token expires")
  public String getExpiresIn() {
    return expiresIn;
  }

  public void setExpiresIn(String expiresIn) {
    this.expiresIn = expiresIn;
  }

  public PostAuth2Response tokenType(String tokenType) {
    this.tokenType = tokenType;
    return this;
  }

   /**
   * Type of authentication token
   * @return tokenType
  **/
  @Schema(required = true, description = "Type of authentication token")
  public String getTokenType() {
    return tokenType;
  }

  public void setTokenType(String tokenType) {
    this.tokenType = tokenType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PostAuth2Response postAuth2Response = (PostAuth2Response) o;
    return Objects.equals(this.idToken, postAuth2Response.idToken) &&
        Objects.equals(this.refreshToken, postAuth2Response.refreshToken) &&
        Objects.equals(this.expiresIn, postAuth2Response.expiresIn) &&
        Objects.equals(this.tokenType, postAuth2Response.tokenType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idToken, refreshToken, expiresIn, tokenType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PostAuth2Response {\n");
    
    sb.append("    idToken: ").append(toIndentedString(idToken)).append("\n");
    sb.append("    refreshToken: ").append(toIndentedString(refreshToken)).append("\n");
    sb.append("    expiresIn: ").append(toIndentedString(expiresIn)).append("\n");
    sb.append("    tokenType: ").append(toIndentedString(tokenType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
