/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.MNanoBackend;
import io.swagger.client.model.MNanoConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * MNano
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class MNano {
  @SerializedName("m_NanoConfig")
  private MNanoConfig mNanoConfig = null;

  @SerializedName("MagicNumber")
  private Integer magicNumber = null;

  @SerializedName("VersionNumber")
  private Integer versionNumber = null;

  @SerializedName("BackendVersion")
  private Integer backendVersion = null;

  @SerializedName("m_ErrorMsg")
  private String mErrorMsg = null;

  @SerializedName("m_NanoBackend")
  private MNanoBackend mNanoBackend = null;

  public MNano mNanoConfig(MNanoConfig mNanoConfig) {
    this.mNanoConfig = mNanoConfig;
    return this;
  }

   /**
   * Get mNanoConfig
   * @return mNanoConfig
  **/
  @Schema(required = true, description = "")
  public MNanoConfig getMNanoConfig() {
    return mNanoConfig;
  }

  public void setMNanoConfig(MNanoConfig mNanoConfig) {
    this.mNanoConfig = mNanoConfig;
  }

  public MNano magicNumber(Integer magicNumber) {
    this.magicNumber = magicNumber;
    return this;
  }

   /**
   * Get magicNumber
   * @return magicNumber
  **/
  @Schema(description = "")
  public Integer getMagicNumber() {
    return magicNumber;
  }

  public void setMagicNumber(Integer magicNumber) {
    this.magicNumber = magicNumber;
  }

  public MNano versionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @Schema(description = "")
  public Integer getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }

  public MNano backendVersion(Integer backendVersion) {
    this.backendVersion = backendVersion;
    return this;
  }

   /**
   * Get backendVersion
   * @return backendVersion
  **/
  @Schema(description = "")
  public Integer getBackendVersion() {
    return backendVersion;
  }

  public void setBackendVersion(Integer backendVersion) {
    this.backendVersion = backendVersion;
  }

  public MNano mErrorMsg(String mErrorMsg) {
    this.mErrorMsg = mErrorMsg;
    return this;
  }

   /**
   * Get mErrorMsg
   * @return mErrorMsg
  **/
  @Schema(description = "")
  public String getMErrorMsg() {
    return mErrorMsg;
  }

  public void setMErrorMsg(String mErrorMsg) {
    this.mErrorMsg = mErrorMsg;
  }

  public MNano mNanoBackend(MNanoBackend mNanoBackend) {
    this.mNanoBackend = mNanoBackend;
    return this;
  }

   /**
   * Get mNanoBackend
   * @return mNanoBackend
  **/
  @Schema(description = "")
  public MNanoBackend getMNanoBackend() {
    return mNanoBackend;
  }

  public void setMNanoBackend(MNanoBackend mNanoBackend) {
    this.mNanoBackend = mNanoBackend;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MNano mNano = (MNano) o;
    return Objects.equals(this.mNanoConfig, mNano.mNanoConfig) &&
        Objects.equals(this.magicNumber, mNano.magicNumber) &&
        Objects.equals(this.versionNumber, mNano.versionNumber) &&
        Objects.equals(this.backendVersion, mNano.backendVersion) &&
        Objects.equals(this.mErrorMsg, mNano.mErrorMsg) &&
        Objects.equals(this.mNanoBackend, mNano.mNanoBackend);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mNanoConfig, magicNumber, versionNumber, backendVersion, mErrorMsg, mNanoBackend);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MNano {\n");
    
    sb.append("    mNanoConfig: ").append(toIndentedString(mNanoConfig)).append("\n");
    sb.append("    magicNumber: ").append(toIndentedString(magicNumber)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    backendVersion: ").append(toIndentedString(backendVersion)).append("\n");
    sb.append("    mErrorMsg: ").append(toIndentedString(mErrorMsg)).append("\n");
    sb.append("    mNanoBackend: ").append(toIndentedString(mNanoBackend)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
