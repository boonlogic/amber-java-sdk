/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * OpenAPI spec version: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.FeatureConfig;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * MNanoConfig
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-10-20T15:52:03.807427-05:00[America/Chicago]")
public class MNanoConfig {
  @SerializedName("VersionNumber")
  private Integer versionNumber = null;

  @SerializedName("m_NumericFormat")
  private Integer mNumericFormat = null;

  @SerializedName("m_Accuracy")
  private Float mAccuracy = null;

  @SerializedName("m_PercentVariation")
  private Float mPercentVariation = null;

  @SerializedName("NumOfFeatures")
  private Integer numOfFeatures = null;

  @SerializedName("Features")
  private List<FeatureConfig> features = new ArrayList<FeatureConfig>();

  public MNanoConfig versionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @Schema(description = "")
  public Integer getVersionNumber() {
    return versionNumber;
  }

  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }

  public MNanoConfig mNumericFormat(Integer mNumericFormat) {
    this.mNumericFormat = mNumericFormat;
    return this;
  }

   /**
   * Get mNumericFormat
   * @return mNumericFormat
  **/
  @Schema(description = "")
  public Integer getMNumericFormat() {
    return mNumericFormat;
  }

  public void setMNumericFormat(Integer mNumericFormat) {
    this.mNumericFormat = mNumericFormat;
  }

  public MNanoConfig mAccuracy(Float mAccuracy) {
    this.mAccuracy = mAccuracy;
    return this;
  }

   /**
   * Get mAccuracy
   * @return mAccuracy
  **/
  @Schema(description = "")
  public Float getMAccuracy() {
    return mAccuracy;
  }

  public void setMAccuracy(Float mAccuracy) {
    this.mAccuracy = mAccuracy;
  }

  public MNanoConfig mPercentVariation(Float mPercentVariation) {
    this.mPercentVariation = mPercentVariation;
    return this;
  }

   /**
   * the percent variation (for instance, 0.025 gives 2.5% variation) used for clustering
   * @return mPercentVariation
  **/
  @Schema(required = true, description = "the percent variation (for instance, 0.025 gives 2.5% variation) used for clustering")
  public Float getMPercentVariation() {
    return mPercentVariation;
  }

  public void setMPercentVariation(Float mPercentVariation) {
    this.mPercentVariation = mPercentVariation;
  }

  public MNanoConfig numOfFeatures(Integer numOfFeatures) {
    this.numOfFeatures = numOfFeatures;
    return this;
  }

   /**
   * Get numOfFeatures
   * @return numOfFeatures
  **/
  @Schema(required = true, description = "")
  public Integer getNumOfFeatures() {
    return numOfFeatures;
  }

  public void setNumOfFeatures(Integer numOfFeatures) {
    this.numOfFeatures = numOfFeatures;
  }

  public MNanoConfig features(List<FeatureConfig> features) {
    this.features = features;
    return this;
  }

  public MNanoConfig addFeaturesItem(FeatureConfig featuresItem) {
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Get features
   * @return features
  **/
  @Schema(required = true, description = "")
  public List<FeatureConfig> getFeatures() {
    return features;
  }

  public void setFeatures(List<FeatureConfig> features) {
    this.features = features;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MNanoConfig mNanoConfig = (MNanoConfig) o;
    return Objects.equals(this.versionNumber, mNanoConfig.versionNumber) &&
        Objects.equals(this.mNumericFormat, mNanoConfig.mNumericFormat) &&
        Objects.equals(this.mAccuracy, mNanoConfig.mAccuracy) &&
        Objects.equals(this.mPercentVariation, mNanoConfig.mPercentVariation) &&
        Objects.equals(this.numOfFeatures, mNanoConfig.numOfFeatures) &&
        Objects.equals(this.features, mNanoConfig.features);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionNumber, mNumericFormat, mAccuracy, mPercentVariation, numOfFeatures, features);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MNanoConfig {\n");
    
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    mNumericFormat: ").append(toIndentedString(mNumericFormat)).append("\n");
    sb.append("    mAccuracy: ").append(toIndentedString(mAccuracy)).append("\n");
    sb.append("    mPercentVariation: ").append(toIndentedString(mPercentVariation)).append("\n");
    sb.append("    numOfFeatures: ").append(toIndentedString(numOfFeatures)).append("\n");
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
