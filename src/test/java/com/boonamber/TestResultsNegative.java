/*
 * Amber API Server
 * Boon Logic Amber API server
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.boonamber;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;


/**
 * API tests for DefaultApi
 */
public class TestResultsNegative {

    private AmberV2Client api;
    
    private String modelId = "non-existant-id";
    
    @BeforeEach
    void setUp() {
    	String lid = System.getenv("AMBER_TEST_LICENSE_ID");
    	String lf = System.getenv("AMBER_TEST_LICENSE_FILE");
    	try {
    		this.api = new AmberV2Client(lid, lf);
    	} catch(Exception e) {
    		Assertions.assertTrue(false, "amber client failed to initialize");
    	}
    }
    
    /**
     * enable learning
     *
     * Turn on learning again
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postLearningNegative() throws ApiException {
    	Assertions.assertThrowsExactly(ApiException.class, () -> {
        	api.enableLearning(this.modelId);
        	});
    }
    
    /**
     * get nano status
     *
     * Get arrays of nano status per cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getNanoStatusNegative() throws ApiException {
    	Assertions.assertThrowsExactly(ApiException.class, () -> {
        	api.getNanoStatus(this.modelId);
        	});
    }
 
    /**
     * get status
     *
     * Get Amber status
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStatusNegative() throws ApiException {
    	Assertions.assertThrowsExactly(ApiException.class, () -> {
        	api.getStatus(this.modelId);
        	});
    }
    
//    /**
//     * get diagnostic
//     *
//     * Get Amber status
//     *
//     * @throws ApiException if the Api call fails
//     */
//    @Test
//    public void getDiagnosticNegative() throws ApiException {
//    	Assertions.assertThrowsExactly(ApiException.class, () -> {
//        	api.getDiagnostics(this.modelId, "/bogus/path");
//        	});
//    }
    
//    /**
//     * get root cause
//     *
//     * Get root cause analysis
//     *
//     * @throws ApiException if the Api call fails
//     */
//    @Test
//    public void getRCANegative() throws ApiException {
//        // TODO
//    	
//        Assertions.assertThrowsExactly(ApiException.class, () -> {
//    		api.getRootCause(this.modelId, null, "1");
//        	}, "must specify vectors correctly failed");
//    }
    
    /**
     * post outage
     *
     * Reset streaming window
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postOutageNegative() throws ApiException {
    	Assertions.assertThrowsExactly(ApiException.class, () -> {
        	api.postOutage(this.modelId);
        	});
    }
}
