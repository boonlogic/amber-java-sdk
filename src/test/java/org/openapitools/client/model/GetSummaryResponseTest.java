/*
 * Amber API Server
 * Boon Logic Amber API Server
 *
 * The version of the OpenAPI document: 1.0.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.MAmberStatus;
import org.openapitools.client.model.MAutotune;
import org.openapitools.client.model.MBufferStats;
import org.openapitools.client.model.MNano;
import org.openapitools.client.model.MRecentAMs;
import org.openapitools.client.model.MRecentAnalytics;
import org.openapitools.client.model.MRecentIDs;
import org.openapitools.client.model.MRecentSamples;
import org.openapitools.client.model.MRecentTimes;
import org.openapitools.client.model.MStreamingParameters;
import org.openapitools.client.model.MTraining;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;


/**
 * Model tests for GetSummaryResponse
 */
public class GetSummaryResponseTest {
    private final GetSummaryResponse model = new GetSummaryResponse();

    /**
     * Model tests for GetSummaryResponse
     */
    @Test
    public void testGetSummaryResponse() {
        // TODO: test GetSummaryResponse
    }

    /**
     * Test the property 'magicNumber'
     */
    @Test
    public void magicNumberTest() {
        // TODO: test magicNumber
    }

    /**
     * Test the property 'versionNumber'
     */
    @Test
    public void versionNumberTest() {
        // TODO: test versionNumber
    }

    /**
     * Test the property 'mNano'
     */
    @Test
    public void mNanoTest() {
        // TODO: test mNano
    }

    /**
     * Test the property 'mBufferStats'
     */
    @Test
    public void mBufferStatsTest() {
        // TODO: test mBufferStats
    }

    /**
     * Test the property 'mAutotune'
     */
    @Test
    public void mAutotuneTest() {
        // TODO: test mAutotune
    }

    /**
     * Test the property 'mAutotuningElbowClusterCounts'
     */
    @Test
    public void mAutotuningElbowClusterCountsTest() {
        // TODO: test mAutotuningElbowClusterCounts
    }

    /**
     * Test the property 'mAutotuningElbowPVArray'
     */
    @Test
    public void mAutotuningElbowPVArrayTest() {
        // TODO: test mAutotuningElbowPVArray
    }

    /**
     * Test the property 'mStreamingParameters'
     */
    @Test
    public void mStreamingParametersTest() {
        // TODO: test mStreamingParameters
    }

    /**
     * Test the property 'mAmberStatus'
     */
    @Test
    public void mAmberStatusTest() {
        // TODO: test mAmberStatus
    }

    /**
     * Test the property 'mTraining'
     */
    @Test
    public void mTrainingTest() {
        // TODO: test mTraining
    }

    /**
     * Test the property 'mAnomalyThreshold'
     */
    @Test
    public void mAnomalyThresholdTest() {
        // TODO: test mAnomalyThreshold
    }

    /**
     * Test the property 'mAmberWarningCriticalValue'
     */
    @Test
    public void mAmberWarningCriticalValueTest() {
        // TODO: test mAmberWarningCriticalValue
    }

    /**
     * Test the property 'mAmberAlertCriticalValue'
     */
    @Test
    public void mAmberAlertCriticalValueTest() {
        // TODO: test mAmberAlertCriticalValue
    }

    /**
     * Test the property 'mErrorStringBuffer'
     */
    @Test
    public void mErrorStringBufferTest() {
        // TODO: test mErrorStringBuffer
    }

    /**
     * Test the property 'mClusteringParametersInitialized'
     */
    @Test
    public void mClusteringParametersInitializedTest() {
        // TODO: test mClusteringParametersInitialized
    }

    /**
     * Test the property 'mStreamingMode'
     */
    @Test
    public void mStreamingModeTest() {
        // TODO: test mStreamingMode
    }

    /**
     * Test the property 'mStreamingModeStatus'
     */
    @Test
    public void mStreamingModeStatusTest() {
        // TODO: test mStreamingModeStatus
    }

    /**
     * Test the property 'mModifiedAt'
     */
    @Test
    public void mModifiedAtTest() {
        // TODO: test mModifiedAt
    }

    /**
     * Test the property 'mAnomalyMetricByAnomalyCount'
     */
    @Test
    public void mAnomalyMetricByAnomalyCountTest() {
        // TODO: test mAnomalyMetricByAnomalyCount
    }

    /**
     * Test the property 'mRecentAnomalyCount'
     */
    @Test
    public void mRecentAnomalyCountTest() {
        // TODO: test mRecentAnomalyCount
    }

    /**
     * Test the property 'mResultsIDArray'
     */
    @Test
    public void mResultsIDArrayTest() {
        // TODO: test mResultsIDArray
    }

    /**
     * Test the property 'mTrainingSamples'
     */
    @Test
    public void mTrainingSamplesTest() {
        // TODO: test mTrainingSamples
    }

    /**
     * Test the property 'mRecentSamples'
     */
    @Test
    public void mRecentSamplesTest() {
        // TODO: test mRecentSamples
    }

    /**
     * Test the property 'mRecentRawSamples'
     */
    @Test
    public void mRecentRawSamplesTest() {
        // TODO: test mRecentRawSamples
    }

    /**
     * Test the property 'mRecentTimes'
     */
    @Test
    public void mRecentTimesTest() {
        // TODO: test mRecentTimes
    }

    /**
     * Test the property 'mRecentSIs'
     */
    @Test
    public void mRecentSIsTest() {
        // TODO: test mRecentSIs
    }

    /**
     * Test the property 'mRecentRIs'
     */
    @Test
    public void mRecentRIsTest() {
        // TODO: test mRecentRIs
    }

    /**
     * Test the property 'mRecentADs'
     */
    @Test
    public void mRecentADsTest() {
        // TODO: test mRecentADs
    }

    /**
     * Test the property 'mRecentAHs'
     */
    @Test
    public void mRecentAHsTest() {
        // TODO: test mRecentAHs
    }

    /**
     * Test the property 'mRecentIDs'
     */
    @Test
    public void mRecentIDsTest() {
        // TODO: test mRecentIDs
    }

    /**
     * Test the property 'mRecentAMs'
     */
    @Test
    public void mRecentAMsTest() {
        // TODO: test mRecentAMs
    }

    /**
     * Test the property 'mRecentAWs'
     */
    @Test
    public void mRecentAWsTest() {
        // TODO: test mRecentAWs
    }

}
